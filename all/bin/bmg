#!/bin/sh

import git:git/data.app.sh
import git:git/defaults

_append() {
	if [ -n "$_MATCH" ]; then
		_MATCH="$_MATCH && \$$1$2"
	else
		_MATCH="\$$1$2"
	fi
}

_rides_cleanup() {
	rm -f $_FILTER
}

_configure $_CONF_INSTALL_CONFIG_PATH/git
_git_init

_AGGREGATION=sum
_UNITS=miles

_GROUP_BUCKET="sum += \$4; n++"
_GROUP_PRINT="print $_AGGREGATION\" \"units"

[ "$_RIDES_BIKE" ] && _append 3 "==\"$_RIDES_BIKE\""
[ "$_RIDES_START" ] && {
	_RIDES_START=$(printf '%s' ${_RIDES_START#*=} | sed -e "s/\///g")
	_append 1 ">=$_RIDES_START"
}
[ "$_RIDES_END" ] && {
	_RIDES_END=$(printf '%s' ${_RIDES_END#*=} | sed -e "s/\///g")
	_append 1 "<=$_RIDES_END"
}
[ "$_RIDES_GROUP" ] && {
	case $_RIDES_GROUP in
	bike)
		_GROUP_BUCKET="bucket = \$3;A[bucket] = A[bucket] + \$4;"

		;;
	year)
		_GROUP_BUCKET="bucket = substr(\$1, 1, 4);A[bucket] = A[bucket] + \$4;"
		;;
	month)
		_GROUP_BUCKET="bucket = substr(\$1, 1, 7);A[bucket] = A[bucket] + \$4;"
		;;
	day)
		_GROUP_BUCKET="bucket = substr(\$1, 1, 7);A[bucket] = A[bucket] + \$4;"
		;;
	esac

	_GROUP_PRINT="for (i in A) {print i, A[i];}"
}

_defer _rides_cleanup

_FILTER=$(mktemp)
printf '%s {%s} END {%s}\n' "$_MATCH" "$_GROUP_BUCKET" "$_GROUP_PRINT" >$_FILTER

awk -F'|' -f $_FILTER -v units="$_UNITS" \
	$(find $_PROJECT_PATH -type f -name '*.csv') |
	sort
